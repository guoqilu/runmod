#!/bin/bash

# --------------------------------------------------
# Script will provide options for inclusion of various EDA Software Resources
#
# Options will be based on Role
# 1. AMS 
# 2. AMS/Photonics 
# 3. AMS/PD 
# 4. RTL/DV 
# --------------------------------------------------

# --------------------------------------------------
# REAX to Command Line Options
# --------------------------------------------------

while (( $# ))
do
    case $1 in
        "--help" | "-h" )
            echo "  Usage Guide for Lightelligence EDA Configurator"
            echo "  usage: edaSetup [-h [--help] -co [--configOption] ROLE"
            echo ""
            echo "  Command Line Options:"
            echo ""
            echo "  -c [--configOption] ROLE       Select your Role, if not provided, interactive selection is enabled"
            echo ""
            echo "                                  Available Roles and Valid Options:"
            echo "                                  1  :: AMS - IC618"
            echo "                                  2  :: AMS - ICADVM181"
            echo "                                  3  :: AMS - ICADVM181/Photonics"
            echo "                                  4  :: AMS - ICADVM181/PD"
            echo "                                  5  :: AMS - ICADVM181/PD-Siph"
            echo "                                  6  :: RTL/DV"
            echo "                                  7  :: Allegro"
            echo ""
            echo " -h [--help]                      Prints help message and exits"
            echo ""
            return
            ;;
        "--configOption" | "-c" )
            # Get Value after -c || --configOption
            shift
            configOption="$@"
            ;;
        *)
            echo $arg
            echo "Unexecpted Command Line Input - Exiting"
            return
            ;;    
    esac
    shift
done

# --------------------------------------------------
# Parse User Input if Command Line Option not Supplied
# --------------------------------------------------

if [ -z "$configOption" ]
then
    echo ""
    echo "  Welcome to the Lightelligence EDA Configurator"
    echo ""
    echo "  Please Select Your Role:"
    echo "  1. AMS - IC618"
    echo "  2. AMS - ICADVM181"
    echo "  3. AMS - ICADVM181/Photonics"
    echo "  4. AMS - ICADVM181/PD"
    echo "  5. AMS - ICADVM181/PD-Siph"    
    echo "  6. RTL/DV"
    echo "  7. Allegro"
    echo -n "  Selection [Press Enter]: "
    read configOption
fi

echo $configOption

# --------------------------------------------------
# **************************************************
#
#                       Cadence
#
# **************************************************
# --------------------------------------------------

configure_CDS() {

# --------------------------------------------------
# Set License File Server for Cadence
# --------------------------------------------------
module load cadence

# --------------------------------------------------
# Update Path(s)
# --------------------------------------------------

# Set Path, LD_LIBRARY Path, and CDS Help Path for Cadence Executables

if [ -n "$JOULESHOME" ]; then
    export PATH=$JOULESHOME/tools/bin:$JOULESHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$JOULESHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$MODUSHOME" ]; then
    export PATH=$MODUSHOME/tools/bin:$MODUSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$MODUSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$QRC_HOME" ]; then
    export PATH=$QRC_HOME/tools/bin:$QRC_HOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$QRC_HOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$PVSHOME" ]; then
    export PATH=$PVSHOME/tools/bin:$PVSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$PVSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$MMSIMHOME" ]; then
    export PATH=$MMSIMHOME/bin:$MMSIMHOME/tools/bin:$MMSIMHOME/tools/dfII/bin:$PATH; 
    export LD_LIBRARY_PATH=$MMSIMHOME/tools/inca/lib:$MMSIMHOME/tools/lib:$MMSIMHOME/tools/ultrasim/lib:$LD_LIBRARY_PATH;
    export CDNSHELP_DOC=$MMSIMHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$CDSHOME" ]; then
    export PATH=$CDSHOME/tools/bin:$CDSHOME/tools/dfII/bin:$PATH; 
    export LD_LIBRARY_PATH=$CDSHOME/tools/lib:$CDSHOME/tools/dfII/lib:$LD_LIBRARY_PATH;
    export CDNSHELP_DOC=$CDSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$INNOVUSHOME" ]; then
    export PATH=$INNOVUSHOME/tools/bin:$INNOVUSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$INNOVUSHOME/doc:$CDNSHELP_DOC;
fi

}

# --------------------------------------------------
# **************************************************
#
#            Cadence - AMS ENV Variables
#
# **************************************************
# --------------------------------------------------

configure_CDS_AMS_ENV_VARS() {

    export CDS_LIC_FILE=$LM_LICENSE_FILE
    export CDS_AUTO_64BIT=ALL
    #export SPECTRE_DEFAULTS=-E
    export CDS_Netlisting_Mode=Analog

    export QRC_ENABLE_EXTRACTION=t
    export RCXTODFII_TYPE=QRC

    export CDS_LOAD_ENV=addCWD
    export CDS_LOG_PATH=.
    export CDS_DEFAULT_BROWSER=firefox

    export CDS_ERRORLOG="DIR=/tools/crashlogs"

}

# --------------------------------------------------
# **************************************************
#
#            Cadence - Photonics ENV Variables
#
# **************************************************
# --------------------------------------------------

configure_CDS_SiPh_ENV_VARS() {

    export Virtuoso_Photonics_Option=1
    export Virtuoso_MultiTech=1

}

# --------------------------------------------------
# **************************************************
#
#                       ICManage
#
# **************************************************
# --------------------------------------------------

configure_ICM() {

    #To be placed one level up from the root client directory
    #e.g. if client installed in /eda/icmanage/gdpxl
    #     gdpxl.baschrc file sits in /eda/icmanage

    # --------------------------------------------------
    # ZSH Hack
    # ICManage Requires Bash Complete
    # --------------------------------------------------

    if [ -n "$ZSH_VERSION" ]; then
        # >>> ZSH EDA initialize >>>
        # Source EDA Environment
        #
        autoload bashcompinit   # Need for ZSH Auto-Completion
        bashcompinit            # Need for ZSH Auto-Completion
        # <<< ZSH EDA initialize <<<
    fi

    # Set HOME and PATH Variables
    export ICM_HOME="$TOOLSBASE/icmanage"
    export PATH="$ICM_HOME/gdpxl/bin.lnx86-64:$ICM_HOME/gdpxl/gdm.lnx86-64:$PATH"

    # Set ENV Variables
    export ICM_GDP_SERVER="http://Mach2.lt.lab:5000"
    export ICM_PLASTIC_SERVER="Mach2.lt.lab:8087"
    export PYTHONPATH="$ICM_HOME/gdpxl/cli:$ICM_HOME/gdpxl/pypackages"
    export ICM_SkillRoot="$ICM_HOME/gdpxl"
    export CDS_GDM_SHLIB_LOCATION="$ICM_HOME/gdpxl/gdm.lnx86-64"

    # Source ICM Collateral
    source "$ICM_HOME/gdpxl/cli/noglob"
    source "$ICM_HOME/gdpxl/cli/bash-completion"

}


# --------------------------------------------------
# **************************************************
#
#                       Lumerical
#
# **************************************************
# --------------------------------------------------

configure_LUM() {

    # Lumerical License File
    if [ -n "$LM_LICENSE_FILE" ]; then
        export LM_LICENSE_FILE=$LM_LICENSE_FILE:27011@Faraday-1.opu.tv
    else
        export LM_LICENSE_FILE=27011@Faraday-1.opu.tv
    fi

    # Set HOME and PATH Variables
    export LUMTOOLS=$TOOLSBASE/lumerical
    export INTERCONNECT_HOME=$LUMTOOLS/2019b

    if [ -n "$INTERCONNECT_HOME" ]; then
            export PATH=$INTERCONNECT_HOME/bin:$PATH;
            export LD_LIBRARY_PATH=$INTERCONNECT_HOME/interfaces/cadence/spectre:$LD_LIBRARY_PATH;
    fi

}

# --------------------------------------------------
# Tools Base Installation Folder
# --------------------------------------------------

if [ -d "/eda" ]; then
    export TOOLSBASE=/eda
else
    export TOOLSBASE=/tools
fi

# --------------------------------------------------
# Cadence Installation Path
# --------------------------------------------------

export CDSTOOLS=$TOOLSBASE/cadence

# --------------------------------------------------
# EDA Roles and Tool Selection
# --------------------------------------------------

case $configOption in
    1) # AMS - IC618

        # IC Installation
        export CDSBASE=IC618ISR5
        export CDSHOME=$CDSTOOLS/$CDSBASE
        # Simulation
        export MMSIMHOME=$CDSTOOLS/SPECTRE191ISR2
        module load xcelium/1809
        # Physical Verification
        export QRC_HOME=$CDSTOOLS/EXT191
        export PVSHOME=$CDSTOOLS/PVS161

        configure_CDS
        configure_CDS_AMS_ENV_VARS
        configure_ICM

        ;;
    2) # AMS - ICADVM181
        
        # IC Installation
        export CDSBASE=ICADVM181
        export CDSHOME=$CDSTOOLS/$CDSBASE
        # Simulation
        export MMSIMHOME=$CDSTOOLS/SPECTRE191ISR2
        module load xcelium/1809
        # Physical Verification
        export QRC_HOME=$CDSTOOLS/EXT191
        export PVSHOME=$CDSTOOLS/PVS161

        configure_CDS
        configure_CDS_AMS_ENV_VARS
        configure_ICM

        ;;
    3) # AMS - ICADVM181/Photonics
        # IC Installation
        export CDSBASE=ICADVM181
        export CDSHOME=$CDSTOOLS/$CDSBASE
        # Simulation
        export MMSIMHOME=$CDSTOOLS/SPECTRE191ISR2
        module load xcelium/1809
        # Physical Verification
        export QRC_HOME=$CDSTOOLS/EXT191
        export PVSHOME=$CDSTOOLS/PVS161

        configure_CDS
        configure_CDS_AMS_ENV_VARS
        configure_CDS_SiPh_ENV_VARS
        configure_LUM
        configure_ICM

        ;;
    4) # AMS - ICADVM181/PD

        # IC Installation
        export CDSBASE=ICADVM181
        export CDSHOME=$CDSTOOLS/$CDSBASE
        # Simulation
        export MMSIMHOME=$CDSTOOLS/SPECTRE181
        module load xcelium/1809
        # Physical Verification
        #export QRC_HOME=$CDSTOOLS/EXT191
	export QRC_HOME=$CDSTOOLS/QUANTUS201
#        export PVSHOME=$CDSTOOLS/PVS161
	export PVSHOME=$CDSTOOLS/PVS191ISR1

        # Digital Flow
        # module load genus/191
        #export INNOVUSHOME=$CDSTOOLS/INNOVUS181
        #export INNOVUSHOME=$CDSTOOLS/INNOVUS191
        #module load confrml/182
        #export JOULESHOME=$CDSTOOLS/JLS181
        #export MODUSHOME=$CDSTOOLS/MODUS181
        module load ssv/191ISR2

        configure_CDS
        configure_CDS_AMS_ENV_VARS
        configure_ICM

        ;;
    5) # AMS - ICADVM181/PD

        # IC Installation
        export CDSBASE=ICADVM181
	#export CDSBASE=ICADVM181ISR8
        export CDSHOME=$CDSTOOLS/$CDSBASE
        # Simulation
        export MMSIMHOME=$CDSTOOLS/SPECTRE191ISR2
        module load xcelium/1809
        # Physical Verification
#        export QRC_HOME=$CDSTOOLS/EXT191
	export QRC_HOME=$CDSTOOLS/QUANTUS201
#        export PVSHOME=$CDSTOOLS/PVS161
	export PVSHOME=$CDSTOOLS/PVS191ISR1

        # Digital Flow
        #module load genus/191
        #export INNOVUSHOME=$CDSTOOLS/INNOVUS181
        export INNOVUSHOME=$CDSTOOLS/INNOVUS191
        #module load confrml/182
        #export JOULESHOME=$CDSTOOLS/JLS181
        #export MODUSHOME=$CDSTOOLS/MODUS181
        module load ssv/191ISR2

        configure_CDS
        configure_CDS_AMS_ENV_VARS
        configure_CDS_SiPh_ENV_VARS
        configure_LUM
        configure_ICM

        ;;
    6) # RTL/DV
        module load xcelium/1809

        configure_CDS
        ;;
    7) # Allegro
        module load allegro
        module load sigrity

        configure_CDS
        ;;
    *)
        ;;
esac
   
