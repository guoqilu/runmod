#!/bin/bash

# --------------------------------------------------
# Script will provide options for inclusion of various software resources
# 1. Base Cadence (including PCB)
# 2. Cadence/Lumerical Co-Simulation
# 3. No EDA Installation
# --------------------------------------------------

if [ -n "$ZSH_VERSION" ]; then
    # >>> ZSH EDA initialize >>>
    # Source EDA Environment
    #
    autoload bashcompinit   # Need for ZSH Auto-Completion
    bashcompinit            # Need for ZSH Auto-Completion
    # <<< ZSH EDA initialize <<<
fi

# --------------------------------------------------
# Tools Base Installation Folder
# --------------------------------------------------

if [ "$HOSTNAME" = "turing-3.opu.tv" ]; then
    export TOOLSBASE=/eda
else
    export TOOLSBASE=/tools
fi

# --------------------------------------------------
# Parse User Input
# --------------------------------------------------
echo ""
echo "  Welcome to the Lightelligence EDA Configuration"
echo "  1. IC618 Base Cadence Installation"
echo "  2. ICADVM181 Base Cadence Installation"
echo "  3. Cadence/Lumerical Co-Simulation"
echo -n "  Selection [Press Enter]: "
read configOption

# --------------------------------------------------
# REAX to User Input
# --------------------------------------------------

case $configOption in
    1)
        #export CDSBASE=IC618
	export CDSBASE=IC618ISR5
        ;;
    2) 
        export CDSBASE=ICADVM181
	export Virtuoso_MultiTech=1
        ;;
    3)
        export CDSBASE=ICADVM181
        export Virtuoso_Photonics_Option=1
        export Virtuoso_MultiTech=1
        ;;

    *) 
        #export CDSBASE=IC618
	export CDSBASE=IC618ISR5
        echo ""
        ;;
esac

# --------------------------------------------------
# **************************************************
#
#                       Cadence
#
# **************************************************
# --------------------------------------------------

# --------------------------------------------------
# Cadence Installation Path
# --------------------------------------------------

export CDSTOOLS=$TOOLSBASE/cadence

# --------------------------------------------------
# Set License File Server for Cadence
# --------------------------------------------------

if [ -n "$LM_LICENSE_FILE" ]; then
    export LM_LICENSE_FILE=5280@Faraday-1.opu.tv:$LM_LICENSE_FILE
else
    export LM_LICENSE_FILE=5280@Faraday-1.opu.tv
fi

# --------------------------------------------------
# Cadence Tools Path(s)
# --------------------------------------------------

# Cadence Base
export CDSHOME=$CDSTOOLS/$CDSBASE

# Simulation
export MMSIMHOME=$CDSTOOLS/SPECTRE181

# Physical Verification
export QRC_HOME=$CDSTOOLS/EXT191
export PVSHOME=$CDSTOOLS/PVS161

# Digital 
#export GENUSHOME=$CDSTOOLS/GENUS181
export GENUSHOME=$CDSTOOLS/GENUS191
#export INNOVUSHOME=$CDSTOOLS/INNOVUS181
export INNOVUSHOME=$CDSTOOLS/INNOVUS191
export AMSHOME=$CDSTOOLS/XCELIUM1809
export CONFRMLHOME=$CDSTOOLS/CONFRML182
export JOULESHOME=$CDSTOOLS/JLS181
export MODUSHOME=$CDSTOOLS/MODUS181
export SSVHOME=$CDSTOOLS/SSV181

# Allegro and SiP
export ALLEGROHOME=$CDSTOOLS/SPB172
export SIGRITYHOME=$CDSTOOLS/SIGRITY2018

# --------------------------------------------------
# Update Path(s)
# --------------------------------------------------

# Set Path, LD_LIBRARY Path, and CDS Help Path for Cadence Executables

if [ -n "$ALLEGROHOME" ]; then
    export PATH=$ALLEGROHOME/tools/bin:$ALLEGROHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$ALLEGROHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$SIGRITYHOME" ]; then
    export PATH=$SIGRITYHOME/tools/bin:$SIGRITYHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$SIGRITYHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$PVSHOME" ]; then
    export PATH=$PVSHOME/tools/bin:$PVSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$PVSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$QRC_HOME" ]; then
    export PATH=$QRC_HOME/tools/bin:$QRC_HOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$QRC_HOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$CONFRMLHOME" ]; then
    export PATH=$CONFRMLHOME/tools/bin:$CONFRMLHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$CONFRMLHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$SSVHOME" ]; then
    export PATH=$SSVHOME/tools/bin:$SSVHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$SSVHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$JOULESHOME" ]; then
    export PATH=$JOULESHOME/tools/bin:$JOULESHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$JOULESHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$MODUSHOME" ]; then
    export PATH=$MODUSHOME/tools/bin:$MODUSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$MODUSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$GENUSHOME" ]; then
    export PATH=$GENUSHOME/tools/bin:$GENUSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$GENUSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$INNOVUSHOME" ]; then
    export PATH=$INNOVUSHOME/tools/bin:$INNOVUSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$INNOVUSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$AMSHOME" ]; then
    export PATH=$AMSHOME/tools/bin:$AMSHOME/tools/dfII/bin:$PATH; 
    export CDNSHELP_DOC=$AMSHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$MMSIMHOME" ]; then
    export PATH=$MMSIMHOME/bin:$MMSIMHOME/tools/bin:$MMSIMHOME/tools/dfII/bin:$PATH; 
    export LD_LIBRARY_PATH=$MMSIMHOME/tools/inca/lib:$MMSIMHOME/tools/lib:$MMSIMHOME/tools/ultrasim/lib:$LD_LIBRARY_PATH;
    export CDNSHELP_DOC=$MMSIMHOME/doc:$CDNSHELP_DOC;
fi

if [ -n "$CDSHOME" ]; then
    export PATH=$CDSHOME/tools/bin:$CDSHOME/tools/dfII/bin:$PATH; 
    export LD_LIBRARY_PATH=$CDSHOME/tools/lib:$CDSHOME/tools/dfII/lib:$LD_LIBRARY_PATH;
    export CDNSHELP_DOC=$CDSHOME/doc:$CDNSHELP_DOC;
fi

# --------------------------------------------------
# Cadence Env Variables
# --------------------------------------------------

#export CDS_LIC_FILE=$LM_LICENSE_FILE

export CDS_AUTO_64BIT=ALL
#export SPECTRE_DEFAULTS=-E
export CDS_Netlisting_Mode=Analog

export QRC_ENABLE_EXTRACTION=t
export RCXTODFII_TYPE=QRC

export CDS_LOAD_ENV=addCWD
export CDS_LOG_PATH=.
export CDS_DEFAULT_BROWSER=firefox

export CDS_ERRORLOG="DIR=/tools/crashlogs"

#export FGR_VERSION_MANAGEMENT=OFF
#export GDM_USE_SHLIB_ENVVAR=1


# --------------------------------------------------
# **************************************************
#
#                       ICManage
#
# **************************************************
# --------------------------------------------------

#To be placed one level up from the root client directory
#e.g. if client installed in /eda/icmanage/gdpxl
#     gdpxl.baschrc file sits in /eda/icmanage

export ICM_HOME="$TOOLSBASE/icmanage"

export PATH="$ICM_HOME/gdpxl/bin.lnx86-64:$ICM_HOME/gdpxl/gdm.lnx86-64:$PATH"
export ICM_GDP_SERVER="http://Mach2.lt.lab:5000"
export ICM_PLASTIC_SERVER="Mach2.lt.lab:8087"
export PYTHONPATH="$ICM_HOME/gdpxl/cli:$ICM_HOME/gdpxl/pypackages"

export ICM_SkillRoot="$ICM_HOME/gdpxl"
export CDS_GDM_SHLIB_LOCATION="$ICM_HOME/gdpxl/gdm.lnx86-64"

source "$ICM_HOME/gdpxl/cli/noglob"
source "$ICM_HOME/gdpxl/cli/bash-completion"


# --------------------------------------------------
# **************************************************
#
#                       Lumerical
#
# **************************************************
# --------------------------------------------------

# Lumerical License File
if [ -n "$LM_LICENSE_FILE" ]; then
    export LM_LICENSE_FILE=$LM_LICENSE_FILE:27011@Faraday-1.opu.tv
else
    export LM_LICENSE_FILE=27011@Faraday-1.opu.tv
fi

# INTERCONNECT Base and Tool Paths
export LUMTOOLS=$TOOLSBASE/lumerical
export INTERCONNECT_HOME=$LUMTOOLS/interconnect

if [ -n "$INTERCONNECT_HOME" ]; then
        export PATH=$INTERCONNECT_HOME/bin:$PATH;
        export LD_LIBRARY_PATH=$INTERCONNECT_HOME/interfaces/cadence/spectre:$LD_LIBRARY_PATH;
fi
